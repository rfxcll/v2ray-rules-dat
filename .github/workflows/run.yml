name: Build V2Ray rules dat files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 21 * * FRI"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "OISD_FULL=https://big.oisd.nl/dnsmasq" >> $GITHUB_ENV
          echo "OISD_SMALL=https://small.oisd.nl/dnsmasq" >> $GITHUB_ENV
          echo "OISD_NSFW=https://nsfw.oisd.nl/dnsmasq" >> $GITHUB_ENV
          echo "DOH_DNS=https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-domains.txt" >> $GITHUB_ENV
          echo "RULE_ADS=https://raw.githubusercontent.com/d3ward/toolz/master/src/d3host.txt" >> $GITHUB_ENV
          echo "RULE_ADS_EXTENDED=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_ads.txt" >> $GITHUB_ENV
          echo "RULE_GAME=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_gaming.txt" >> $GITHUB_ENV
          echo "RULE_INDO=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_indo.txt" >> $GITHUB_ENV
          echo "RULE_PS=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_playstore.txt" >> $GITHUB_ENV
          echo "RULE_SOSMED=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_sosmed.txt" >> $GITHUB_ENV
          echo "RULE_STREAMING=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_streaming.txt" >> $GITHUB_ENV
          echo "RULE_UMUM=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_umum.txt" >> $GITHUB_ENV
          echo "RULE_IPCHECK=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_ipcheck.txt" >> $GITHUB_ENV
          echo "RULE_VIDCONFERENCE=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_videoconference.txt" >> $GITHUB_ENV
          echo "URLTEST=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/urltest.txt" >> $GITHUB_ENV
          echo "RULE_SPEEDTEST=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_speedtest.txt" >> $GITHUB_ENV
          echo "MALICIOUS_HOST=https://raw.githubusercontent.com/elliotwutingfeng/Inversion-DNSBL-Blocklists/main/Google_hostnames_light.txt" >> $GITHUB_ENV
          echo "RULE_BANK_ID=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_bank-id.txt" >> $GITHUB_ENV
          echo "RULE_ECOMMERCE=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_ecommerce.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout Loyalsoldier/domain-list-custom
        uses: actions/checkout@v4
        with:
          repository: Loyalsoldier/domain-list-custom
          path: custom

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community


      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./custom/go.mod
          cache-dependency-path: ./custom/go.sum

      - name: Get geoip.dat relative files
        run: |
          wget https://github.com/malikshi/geoip/raw/release/geoip.dat
          wget https://github.com/malikshi/geoip/raw/release/geoip.dat.sha256sum

      - name: Create custom lists
        run: |
          curl -sSL $OISD_FULL | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > ./community/data/oisd-full
          curl -sSL $OISD_FULL | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > oisd-full.txt
          curl -sSL $OISD_SMALL | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > ./community/data/oisd-small
          curl -sSL $OISD_SMALL | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > oisd-small.txt
          curl -sSL $RULE_ADS | grep "0.0.0.0" | awk '{print $2}' > ./community/data/rule-ads
          curl -sSL $RULE_ADS_EXTENDED >> ./community/data/rule-ads
          curl -sSL $RULE_ADS | grep "0.0.0.0" | awk '{print $2}' > rule-ads.txt
          curl -sSL $RULE_ADS_EXTENDED >> rule-ads.txt
          curl -sSL $OISD_NSFW | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > ./community/data/oisd-nsfw
          curl -sSL $OISD_NSFW | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > oisd-nsfw.txt
          curl -sSo ./community/data/rule-doh $DOH_DNS
          curl -sSo rule-doh.txt $DOH_DNS
          curl -sSo ./community/data/rule-gaming $RULE_GAME
          curl -sSo rule-gaming.txt $RULE_GAME
          curl -sSo ./community/data/rule-indo $RULE_INDO
          curl -sSo rule-indo.txt $RULE_INDO
          curl -sSo ./community/data/rule-playstore $RULE_PS
          curl -sSo rule-playstore.txt $RULE_PS
          curl -sSo ./community/data/rule-sosmed $RULE_SOSMED
          curl -sSo rule-sosmed.txt $RULE_SOSMED
          curl -sSo ./community/data/rule-streaming $RULE_STREAMING
          curl -sSo rule-streaming.txt $RULE_STREAMING
          curl -sSo ./community/data/rule-speedtest $RULE_SPEEDTEST
          curl -sSo rule-speedtest.txt $RULE_SPEEDTEST
          curl -sSo ./community/data/rule-umum $RULE_UMUM
          curl -sSo rule-umum.txt $RULE_UMUM
          curl -sSo ./community/data/rule-ipcheck $RULE_IPCHECK
          curl -sSo rule-ipcheck.txt $RULE_IPCHECK
          curl -sSo ./community/data/videoconference $RULE_VIDCONFERENCE
          curl -sSo videoconference.txt $RULE_VIDCONFERENCE
          curl -sSo ./community/data/urltest $URLTEST
          curl -sSo urltest.txt $URLTEST
          curl -sSo ./community/data/rule-malicious $MALICIOUS_HOST
          curl -sSo rule-malicious.txt $MALICIOUS_HOST
          curl -sSo ./community/data/bank-id $RULE_BANK_ID
          curl -sSo bank-id.txt $RULE_BANK_ID
          curl -sSo ./community/data/ecommerce-id $RULE_ECOMMERCE
          curl -sSo ecommerce-id.txt $RULE_ECOMMERCE

      - name: Filter and save d3ward.txt
        run: |
          python <<EOF
          import requests

          # Fetch the contents of the file from the URL
          url = "https://raw.githubusercontent.com/d3ward/toolz/master/src/d3host.txt"
          response = requests.get(url)
          data = response.text

          # Filter lines with "0.0.0.0" and spaces and remove "0.0.0.0" text
          filtered_lines = [line.replace("0.0.0.0 ", "") for line in data.split("\n") if "0.0.0.0 " in line]

          # Save the filtered lines to a file named "d3ward.txt"
          with open("./community/data/d3ward", "w") as file:
              for line in filtered_lines:
                  file.write(line + "\n")
          EOF

      - name: Build geosite.dat file
        run: |
          cd custom || exit 1
          go run ./ --datapath=../community/data

      - name: Move and zip files and generate sha256 hash
        run: |
          install -Dp ./geoip.dat ./publish/GeoIP.dat
          install -Dp ./geoip.dat.sha256sum ./publish/GeoIP.dat.sha256sum
          install -Dp ./custom/publish/geosite.dat ./publish/GeoSite.dat
          cd ./publish || exit 1
          zip Geo-files.zip GeoIP.dat GeoSite.dat
          sha256sum GeoSite.dat > GeoSite.dat.sha256sum
          sha256sum Geo-files.zip > Geo-files.zip.sha256sum

      - name: Convert to Sing-Box geoassets
        run: |
          wget https://github.com/malikshi/Notes/releases/download/v2box/v2box
          chmod +x v2box
          ./v2box migrate geoip -i ./publish/GeoIP.dat -o GeoIP.db
          ./v2box migrate geosite -i ./publish/GeoSite.dat -o GeoSite.db
          mv -f GeoIP.db ./publish/
          mv -f GeoSite.db ./publish/
          cd ./publish || exit 1
          sha256sum GeoSite.db > GeoSite.db.sha256sum
          sha256sum GeoIP.db > GeoIP.db.sha256sum

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.TAG_NAME }}
          file_glob: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Delete Old Release
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          repo: rfxcll/v2ray-rules-dat
          keep_latest: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
